services:
  # --- NODE RAFT (SUB-TUGAS A) ---
  node1:
    build:
      context: ../
      dockerfile: docker/Dockerfile.node
    container_name: node1
    ports:
      - "8001:${INTERNAL_PORT:-8000}"
    env_file:
      - ../.env
    environment:
      - NODE_ID=node1
      - PEERS=node2,node3
      - INTERNAL_PORT=${INTERNAL_PORT:-8000}
    networks:
      - raft-net
    # CMD default dari Dockerfile (lock_manager) akan digunakan

  node2:
    build:
      context: ../
      dockerfile: docker/Dockerfile.node
    container_name: node2
    ports:
      - "8002:${INTERNAL_PORT:-8000}"
    env_file:
      - ../.env
    environment:
      - NODE_ID=node2
      - PEERS=node1,node3
      - INTERNAL_PORT=${INTERNAL_PORT:-8000}
    networks:
      - raft-net

  node3:
    build:
      context: ../
      dockerfile: docker/Dockerfile.node
    container_name: node3
    ports:
      - "8003:${INTERNAL_PORT:-8000}"
    env_file:
      - ../.env
    environment:
      - NODE_ID=node3
      - PEERS=node1,node2
      - INTERNAL_PORT=${INTERNAL_PORT:-8000}
    networks:
      - raft-net

  # --- NODE ANTRIAN (SUB-TUGAS B) ---
  queue-node-1:
    build:
      context: ../
      dockerfile: docker/Dockerfile.node
    container_name: queue-node-1
    ports:
      - "9101:${INTERNAL_PORT:-8000}"
    env_file:
      - ../.env
    environment:
      - NODE_ID=queue-node-1
      - INTERNAL_PORT=${INTERNAL_PORT:-8000}
    networks:
      - raft-net
    # PERINTAH INI (di level yang benar) MENIMPA CMD DARI DOCKERFILE
    command: python -m src.nodes.queue_node

  # --- SERVER REDIS (SUB-TUGAS B) ---
  redis-1:
    image: "redis:7-alpine"
    container_name: redis-1
    command: redis-server --port 6379
    networks:
      - raft-net

  redis-2:
    image: "redis:7-alpine"
    container_name: redis-2
    command: redis-server --port 6379
    networks:
      - raft-net

  redis-3:
    image: "redis:7-alpine"
    container_name: redis-3
    command: redis-server --port 6379
    networks:
      - raft-net

  # --- NODE CACHE (SUB-TUGAS C) ---
  cache-node-1:
    build:
      context: ../
      dockerfile: docker/Dockerfile.node
    container_name: cache-node-1
    ports:
      - "10001:8000" # Port baru (misal: 10001)
    env_file:
      - ../.env
    environment:
      - NODE_ID=cache-node-1
      - INTERNAL_PORT=${INTERNAL_PORT:-8000}
      - PEERS=cache-node-2,cache-node-3
    networks:
      - raft-net
    # Perintah baru: Menjalankan cache_node.py
    command: python -m src.nodes.cache_node

  cache-node-2: # <-- BLOK BARU
    build:
      context: ../
      dockerfile: docker/Dockerfile.node
    container_name: cache-node-2
    ports:
      - "10002:8000"
    env_file:
      - ../.env
    environment:
      - NODE_ID=cache-node-2
      - INTERNAL_PORT=${INTERNAL_PORT:-8000}
      - PEERS=cache-node-1,cache-node-3
    networks:
      - raft-net
    command: python -m src.nodes.cache_node

  cache-node-3: # <-- BLOK BARU
    build:
      context: ../
      dockerfile: docker/Dockerfile.node
    container_name: cache-node-3
    ports:
      - "10003:8000"
    env_file:
      - ../.env
    environment:
      - NODE_ID=cache-node-3
      - INTERNAL_PORT=${INTERNAL_PORT:-8000}
      - PEERS=cache-node-1,cache-node-2
    networks:
      - raft-net
    command: python -m src.nodes.cache_node

# --- DEFINISI JARINGAN ---
# Ini harus berada di level atas (indentasi 0), sama seperti 'services'
networks:
  raft-net:
    driver: bridge
